---
title: "Data Analysis with the Arctic Shorebird csv files"
format: html
---

```{r message = FALSE, warning = FALSE}
library(tidyverse)
library(lubridate)
library(RColorBrewer)
```

```{r message = FALSE}
# Defining path and file names 
path_raw <- 'data/raw'

nests_data <-read_csv('data/raw/ASDN_Bird_nests.csv')

glimpse(nests_data)

nests_month <- nests_data %>% 
  mutate(Month = month(Date_found)) %>% 
  group_by(Species, Site, Year, Month) %>% 
  summarize(n_nest = n())

# summarize the snow cover table


# read the snow cover data in 
snowcover_data <- read_csv('data/raw/snow_cover.csv')


# date is stored as a character, need to transform the date in date format 

snowcover_data_fixed <- snowcover_data %>%
  mutate(snow_days = ifelse(Snow_cover > 10, 1, 0),
         Date2 = as_date(Date))

snowcover_data_fixed %>% 
  filter(is.na(Date2)) %>% 
  View()


# the dates are not as expected, means there are different date types. Let's start by fixing the problematic dates before transforming it to the date format. 

snowcover_data_fixed <- snowcover_data %>% 
  mutate(Date = ifelse(Date == '8&9 june 06','8 june 6', Date),
         Date2 = dmy(Date))


# monthly statistics by adding the snow days with a threshold at 10% 
snowcover_month <- snowcover_data_fixed %>%
  mutate(snow_days = ifelse(Snow_cover > 10, 1, 0), 
         Month = month(Date2)) %>%
  group_by(Site, Year, Month) %>%
  summarise(cum_snow_days = sum(snow_days, na.rm=TRUE),
            avg_snow_cover = mean(Snow_cover, na.rm=TRUE)) %>%
  ungroup()

# join the snow cover and nest tables

nests_snow_month <- nests_month %>% 
  inner_join(snowcover_month, join_by(Site, Year, Month))

names(nests_snow_month)


# aggregate by year instead
nests_snow_year <- nests_snow_month %>% 
  group_by(Species, Site, Year) %>% 
  summarise(cum_snow_days = sum(cum_snow_days, na.rm = TRUE),
            avg_snow_cover = mean(avg_snow_cover, na.rm = TRUE),
            n_nest = sum(n_nest, na.rm = TRUE)) %>% 
  ungroup()


ggplot(nests_snow_year, aes(x=cum_snow_days, y=n_nest , color=Species)) + 
  geom_point() +
  scale_colour_brewer(palette = "Set3") +
  ggtitle("Number of eggs vs cummulative snow days") #+
  # facet_wrap(vars(Year), scales = "free")


```

```{r}
ggplot(nests_snow_year, aes(x=avg_snow_cover, y=n_nest , color=Species)) + 
  geom_point() +
  scale_colour_brewer(palette = "Set3")+ 
  ggtitle("Number of eggs vs avg snow cover")#+
  # facet_wrap(vars(Year), scales = "free")
```
### Which shorebird species makes the most eggs?

```{r message = FALSE}
# importing the data 

sites_data <- read_csv('data/raw/site.csv')
eggs_data <- read_csv('data/raw/ASDN_Bird_eggs.csv')
species_data <- read_csv('data/raw/species.csv')
nests_data <- read_csv('data/raw/ASDN_Bird_nests.csv')
lemmings_data <- read_csv('data/raw/ASDN_Daily_pred_lemm.csv')
```

Compute the number of eggs per nest. The column `egg-num` seems to be a good candidate to estimate the number of eggs per nest:
```{r message = FALSE}
eggs_sum <- eggs_data %>% 
  group_by(Site, Year, Nest_ID) %>% 
  summarize(n_egg  = max(Egg_num)) %>% 
  ungroup()

nest_species_avg <- nest_species %>% 
  group_by(Species) %>% 
  summarise(avg_egg_numb = mean(n_egg))

nest_species_avg %>% 
  arrange(desc(avg_egg_numb))

```

```{r}
nest_species_avg <- nest_species_avg %>% 
  left_join(species_data, join_by(Species == Code))


nest_species_avg %>% 
  select(-Relevance) %>% 
  relocate(avg_egg_numb, .after = last_col()) %>% 
  arrange(desc(avg_egg_numb))
```

